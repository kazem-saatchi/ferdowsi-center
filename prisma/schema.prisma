generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Shop {
  id            String @id @unique @default(uuid())
  plaque        Int @unique
  area          Float
  floor         Int
  type          ShopType
  ownerId       String
  renterId      String?
  isActive      Boolean @default(true)
  ownerName     String @default("")
  renterName    String? 

  owner         Person  @relation("ShopOwner", fields: [ownerId], references: [id])
  renter        Person? @relation("ShopRenter", fields: [renterId], references: [id])

  chargeData    ShopChargeReference[]
  histories     ShopHistory[]
  charges       Charge[]
  payments      Payment[]
}

enum ShopType {
  STORE
  OFFICE
  KIOSK //مشاعات
}

model Person {
  id            String @id @unique @default(uuid())
  phoneOne      String
  phoneTwo      String?
  IdNumber      String @unique
  firstName     String
  lastName      String
  password      String
  isActive      Boolean @default(true)
  role          Role @default(USER)

  ownedShops    Shop[] @relation("ShopOwner")
  rentedShops   Shop[] @relation("ShopRenter")

  histories     ShopHistory[]
  charges       Charge[]
  payments      Payment[]
}

enum Role {
  ADMIN
  MANAGER
  STAFF
  USER
}

model ShopHistory {
  id            String   @id @unique @default(uuid())
  shopId        String
  plaque        Int
  personId      String
  personName    String
  type          HistoryType
  startDate     DateTime
  endDate       DateTime?
  isActive      Boolean  @default(true)

  shop          Shop     @relation(fields: [shopId], references: [id])
  person        Person   @relation(fields: [personId], references: [id])

  createdAt     DateTime @default(now()) 

  @@index([shopId])
  @@index([personId])
}

enum HistoryType {
  ActiveByOwner
  ActiveByRenter
  InActive
  Ownership
}

model Charge {
  id            String   @id @unique @default(uuid())
  title         String
  amount        Int
  shopId        String
  plaque        Int
  personId      String
  personName    String
  date          DateTime
  operationId   String
  operationName String
  daysCount     Int
  proprietor    Boolean @default(false)  //مالکانه 
  description       String      @default("") @db.VarChar(255)

  shop          Shop    @relation(fields: [shopId],references: [id])
  person        Person  @relation(fields: [personId],references: [id])
  operation     Operation @relation(fields: [operationId],references: [id])

  @@index([operationId])
  @@index([shopId])
  @@index([personId])
}

model Payment {
  id                String   @id @unique @default(uuid())
  amount            Int
  shopId            String
  plaque            Int
  personId          String
  personName        String
  date              DateTime
  proprietor        Boolean     @default(false) //مالکانه 
  type              PaymentType @default(CASH)
  description       String      @default("") @db.VarChar(255)
  receiptImageUrl   String      @default("")

  shop              Shop    @relation(fields: [shopId],references: [id])
  person            Person  @relation(fields: [personId],references: [id])

  @@index([shopId])
  @@index([personId])
}

enum PaymentType {
  CASH
  CHEQUE
  POS_MACHINE
  BANK_TRANSFER
  OTHER
}

model Operation {
  id            String   @id @unique @default(uuid())
  title         String
  date          DateTime

  createdAt     DateTime @default(now()) 

  charges       Charge[]
}

model Log {
  id          String   @id @unique @default(uuid())
  action      String   // Description of the action (e.g., "Payment Added")
  details     String?  // Optional JSON or text for additional information
  performedBy String   // ID of the user who performed the action
  shopId      String?  // Optional reference to the shop (if relevant)
  personId    String?  // Optional reference to the person (if relevant)
  timestamp   DateTime @default(now()) // Automatically logs the time
}

model Session {
  id          String   @id @default(uuid())
  personId    String   
  idNumber    String
  createdAt   DateTime @default(now())

  @@index([personId]) 
}

model ShopChargeReference {
  id              String    @id @unique @default(uuid())
  shopId          String    
  plaque          Int
  area            Float
  constantAmount  Int
  metricAmount    Int
  totalAmount     Int
  year            Int       @default(2024) // Example default year
  proprietor      Boolean   @default(false) //مالکانه 

  createdAt       DateTime  @default(now()) 

  shop            Shop      @relation(fields: [shopId], references: [id])

  @@index([shopId])
  @@index([year])
  @@unique([shopId,proprietor])
}

model Costs {
  id            String   @id @unique @default(uuid())
  title         String
  amount        Int
  date          DateTime
  description   String?  @db.VarChar(255)
  category      Category
  billImage     String
  proprietor    Boolean   @default(false) //مالکانه 

  createdAt     DateTime @default(now())
}

enum Category {
  ELECTRICITY   // قبض برق
  WATER         // قبض آب
  GAS           // قبض گاز
  ELEVATOR      // تعمیرات آسانسور
  ESCALATOR     // تعمیرات پله برقی
  CHILLER       // تعمیرات موتورخانه
}